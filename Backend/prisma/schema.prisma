// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum UserRole {
  ADMIN
  USER
}
enum Difficulty {
  EASY
  MEDIUM
  HARD
}


model User {
  id                      String    @id @default(uuid())
  username                String?   @unique
  email                   String    @unique
  image                   String?
  role                    UserRole  @default(USER)
  password                String
  isVerified              Boolean   @default(false)
  verificationToken       String?
  verificationTokenExpiry DateTime?
  forgetPasswordToken         String?
  forgetPasswordTokenExpiry   DateTime?
  refreshToken             String?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  problems Problem[]
}

model Problem{
  id String @id @default(uuid())
  title String
  description String
  difficulty Difficulty
  tags String[] //["tag1,tag2,tag3"]
  userId String
  examples Json
  constraints String
  hints String?
  editorail String?
   

  testcases Json //[{"input":"1","output":"1"},{"input":"2","output":"2"}]
  codeSnippet Json
  refrenceSolution Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //RelationShip

  user User  @relation (fields: [userId],references: [id],onDelete: Cascade)


}